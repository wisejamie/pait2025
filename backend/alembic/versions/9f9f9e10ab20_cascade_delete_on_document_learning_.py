"""cascade delete on document â†’ learning_objectives & sections

Revision ID: 9f9f9e10ab20
Revises: be881f698201
Create Date: 2025-07-24 12:11:58.770172

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9f9f9e10ab20'
down_revision: Union[str, Sequence[str], None] = 'be881f698201'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('learning_objectives', 'doc_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_constraint(op.f('learning_objectives_doc_id_fkey'), 'learning_objectives', type_='foreignkey')
    op.create_foreign_key(None, 'learning_objectives', 'documents', ['doc_id'], ['id'], ondelete='CASCADE')
    op.alter_column('question_options', 'question_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(op.f('question_options_question_id_fkey'), 'question_options', type_='foreignkey')
    op.create_foreign_key(None, 'question_options', 'questions', ['question_id'], ['id'], ondelete='CASCADE')
    op.alter_column('questions', 'doc_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('questions', 'section_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_constraint(op.f('questions_doc_id_fkey'), 'questions', type_='foreignkey')
    op.drop_constraint(op.f('questions_section_id_fkey'), 'questions', type_='foreignkey')
    op.create_foreign_key(None, 'questions', 'documents', ['doc_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'questions', 'sections', ['section_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('quiz_responses_session_question_id_fkey'), 'quiz_responses', type_='foreignkey')
    op.create_foreign_key(None, 'quiz_responses', 'quiz_session_questions', ['session_question_id'], ['id'], ondelete='CASCADE')
    op.alter_column('quiz_session_questions', 'session_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('quiz_session_questions', 'question_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(op.f('quiz_session_questions_question_id_fkey'), 'quiz_session_questions', type_='foreignkey')
    op.drop_constraint(op.f('quiz_session_questions_session_id_fkey'), 'quiz_session_questions', type_='foreignkey')
    op.create_foreign_key(None, 'quiz_session_questions', 'quiz_sessions', ['session_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'quiz_session_questions', 'questions', ['question_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('quiz_sessions_doc_id_fkey'), 'quiz_sessions', type_='foreignkey')
    op.create_foreign_key(None, 'quiz_sessions', 'documents', ['doc_id'], ['id'], ondelete='CASCADE')
    op.alter_column('sections', 'doc_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_constraint(op.f('sections_doc_id_fkey'), 'sections', type_='foreignkey')
    op.create_foreign_key(None, 'sections', 'documents', ['doc_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'sections', type_='foreignkey')
    op.create_foreign_key(op.f('sections_doc_id_fkey'), 'sections', 'documents', ['doc_id'], ['id'])
    op.alter_column('sections', 'doc_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint(None, 'quiz_sessions', type_='foreignkey')
    op.create_foreign_key(op.f('quiz_sessions_doc_id_fkey'), 'quiz_sessions', 'documents', ['doc_id'], ['id'])
    op.drop_constraint(None, 'quiz_session_questions', type_='foreignkey')
    op.drop_constraint(None, 'quiz_session_questions', type_='foreignkey')
    op.create_foreign_key(op.f('quiz_session_questions_session_id_fkey'), 'quiz_session_questions', 'quiz_sessions', ['session_id'], ['id'])
    op.create_foreign_key(op.f('quiz_session_questions_question_id_fkey'), 'quiz_session_questions', 'questions', ['question_id'], ['id'])
    op.alter_column('quiz_session_questions', 'question_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('quiz_session_questions', 'session_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint(None, 'quiz_responses', type_='foreignkey')
    op.create_foreign_key(op.f('quiz_responses_session_question_id_fkey'), 'quiz_responses', 'quiz_session_questions', ['session_question_id'], ['id'])
    op.drop_constraint(None, 'questions', type_='foreignkey')
    op.drop_constraint(None, 'questions', type_='foreignkey')
    op.create_foreign_key(op.f('questions_section_id_fkey'), 'questions', 'sections', ['section_id'], ['id'])
    op.create_foreign_key(op.f('questions_doc_id_fkey'), 'questions', 'documents', ['doc_id'], ['id'])
    op.alter_column('questions', 'section_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('questions', 'doc_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint(None, 'question_options', type_='foreignkey')
    op.create_foreign_key(op.f('question_options_question_id_fkey'), 'question_options', 'questions', ['question_id'], ['id'])
    op.alter_column('question_options', 'question_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'learning_objectives', type_='foreignkey')
    op.create_foreign_key(op.f('learning_objectives_doc_id_fkey'), 'learning_objectives', 'documents', ['doc_id'], ['id'])
    op.alter_column('learning_objectives', 'doc_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###
